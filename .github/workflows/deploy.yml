name: Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # - name: Install Dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt

      # - name: Install Docker using Docker's official script
      #   run: |
      #       curl -fsSL https://get.docker.com -o get-docker.sh
      #       sudo sh get-docker.sh
      #   continue-on-error: false
      # - name: Install Docker Compose
      #   run: |
      #       sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #       sudo chmod +x /usr/local/bin/docker-compose
      #       docker-compose --version
      #   continue-on-error: false
  
      # - name: Start Services
      #   run: docker-compose up -d
  
      # - name: Run Tests
      #   env:
      #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      #     POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
      #     POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      #     POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} 
      #     POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }} 

            
      #   run: |
      #     cd tests
      #     pytest  
      #     echo "successfully ran tests"

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          IP_ADDRESS: ${{ secrets.EC2_HOST }}
          USER_NAME: ${{ secrets.EC2_USER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          DATABASE: ${{ secrets.DATABASE }}
          USER: ${{ secrets.USER }}
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} 
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }} 

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i private_key ${USER_NAME}@${IP_ADDRESS} 'bash -s' << 'EOF'
            # Install Git and other dependencies
            sudo yum update -y
            sudo yum install -y git

          # Install Docker
            sudo yum update -y
            sudo yum install -y docker
            sudo systemctl enable docker
            sudo systemctl start docker
            sudo usermod -aG docker ec2-user
            
    
          # Install Docker Compose
            if ! command -v docker-compose &> /dev/null
            then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "Docker installed"
          

          # Clone or update repo
          if [ ! -d "/home/ec2-user/KSB-s_API" ]; then
              git clone https://github.com/Harriet-Hall/KSB-s_API.git /home/ec2-user/KSB-s_API
          else
              cd /home/ec2-user/KSB-s_API
              git fetch origin main
              git reset --hard origin/main  # Ensure the latest version is used
              git pull origin main
          fi


          cd /home/ec2-user/KSB-s_API

          # Set up virtual environment
          python3 -m venv venv
          source venv/bin/activate

          # Install dependencies
          python -m pip install --upgrade pip
          pip install -r requirements.txt

          echo "DB_HOST=$HOST" > .env
            echo "PORT=$PORT" >> .env
            echo "USER=$USER" >> .env
            echo "PASSWORD=$PASSWORD" >> .env
            echo "DATABASE=$DATABASE" >> .env
            echo "POSTGRES_DATABASE=$POSTGRES_DATABASE" >> .env
            echo "POSTGRES_PORT=$POSTGRES_PORT" >> .env
            echo "POSTGRES_HOST=$POSTGRES_HOST" >> .env
            echo "POSTGRES_USER=$POSTGRES_USER" >> .env
            echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env


          # Stop existing containers if running
          docker-compose down

          # Build and start the application
          HOST=${HOST} PORT=${PORT} USER=${USER} PASSWORD=${PASSWORD} DATABASE=${DATABASE} docker build -t flask .

          docker run -p 5000:5000 flask 

          echo "App deployed to EC2"
          EOF

         
